buildscript {
    repositories {
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "http://harleyoconnor.com/maven"
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "${config.mc_version}-${config.mod_version}"
if (System.getenv()["Version"] != null)
{
    version = "${config.mc_version}-${System.getenv()["Version"]}"
}

group = config.package_group
archivesBaseName = config.mod_name

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"

    replace("1.12.2-9999.9999.9999z", project.version)
    replaceIn "ModConstants.java"

    makeObfSourceJar = false

    if (config.mappings_version)
        mappings = config.mappings_version
}

dependencies {

    //implementation fg.deobf("curse.maven:dynamictrees-252818:3260881")
    //implementation fg.deobf("curse.maven:jurassicraft-226719:2741623")
    //implementation fg.deobf("blank:llibrary:1.7.20-1.12.2")
    //implementation fg.deobf("blank:llibrary-core:1.0.11-1.12.2")
    runtime "curse.maven:hwyla-253449:2568751"

}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn deobfJar

idea {
    module {
        inheritOutputDirs = true
    }
    module.downloadJavadoc = true
    module.downloadSources = true
}

artifacts {
    archives jar
    archives sourceJar
    archives deobfJar
}